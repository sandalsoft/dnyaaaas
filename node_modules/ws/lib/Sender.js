function e(e){this._socket=e,this.firstFragment=!0}function t(e,t){this[t]=(65280&e)>>8,this[t+1]=255&e}function r(e,t){this[t]=(4278190080&e)>>24,this[t+1]=(16711680&e)>>16,this[t+2]=(65280&e)>>8,this[t+3]=255&e}function i(e){var t,o=new Uint8Array(e.buffer||e),r=e.byteLength||e.length,i=e.byteOffset||0,n=new Buffer(r);for(t=0;r>t;++t)n[t]=o[i+t];return n}function s(){return new Buffer([~~(255*Math.random()),~~(255*Math.random()),~~(255*Math.random()),~~(255*Math.random())])}var n=require("events"),a=require("util"),u=n.EventEmitter,c=require("./ErrorCodes"),o=require("./BufferUtil").BufferUtil;a.inherits(e,n.EventEmitter),e.prototype.close=function(e,n,o){if(void 0!==e&&("number"!=typeof e||!c.isValidErrorCode(e)))throw Error("first argument must be a valid error code number");e=e||1e3;var r=new Buffer(2+(n?Buffer.byteLength(n):0));t.call(r,e,0),r.length>2&&r.write(n,2),this.frameAndSend(8,r,!0,o)},e.prototype.ping=function(t,e){var r=e&&e.mask;this.frameAndSend(9,t||"",!0,r)},e.prototype.pong=function(t,e){var r=e&&e.mask;this.frameAndSend(10,t||"",!0,r)},e.prototype.send=function(n,e,o){var t=!e||e.fin!==!1,i=e&&e.mask,r=e&&e.binary?2:1;this.firstFragment===!1?r=0:this.firstFragment=!1,t&&(this.firstFragment=!0),this.frameAndSend(r,n,t,i,o)},e.prototype.frameAndSend=function(g,a,m,h,n){var l,c,f,d,y,e,p,v=!1;if(a){switch(Buffer.isBuffer(a)||(v=!0,a=!a||void 0===a.byteLength&&void 0===a.buffer?new Buffer(a):i(a)),l=a.length,c=h?6:2,f=l,l>=65536?(c+=8,f=127):l>125&&(c+=2,f=126),d=32768>l||h&&!v,y=d?l+c:c,e=new Buffer(y),e[0]=m?128|g:g,f){case 126:t.call(e,l,2);break;case 127:r.call(e,0,2),r.call(e,l,6)}if(h)if(e[1]=128|f,p=this._randomMask||(this._randomMask=s()),e[c-4]=p[0],e[c-3]=p[1],e[c-2]=p[2],e[c-1]=p[3],d){o.mask(a,p,e,c,l);try{this._socket.write(e,"binary",n)}catch(u){"function"==typeof n?n(u):this.emit("error",u)}}else{o.mask(a,p,a,0,l);try{this._socket.write(e,"binary"),this._socket.write(a,"binary",n)}catch(u){"function"==typeof n?n(u):this.emit("error",u)}}else if(e[1]=f,d){a.copy(e,c);try{this._socket.write(e,"binary",n)}catch(u){"function"==typeof n?n(u):this.emit("error",u)}}else try{this._socket.write(e,"binary"),this._socket.write(a,"binary",n)}catch(u){"function"==typeof n?n(u):this.emit("error",u)}}else try{this._socket.write(new Buffer([g|(m?128:0),0|(h?128:0)].concat(h?[0,0,0,0]:[])),"binary",n)}catch(u){"function"==typeof n?n(u):this.emit("error",u)}},module.exports=e;
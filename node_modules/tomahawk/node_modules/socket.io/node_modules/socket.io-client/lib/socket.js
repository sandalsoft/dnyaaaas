function e(e,t){this.io=e,this.nsp=t,this.json=this,this.ids=0,this.acks={},this.open(),this.receiveBuffer=[],this.sendBuffer=[],this.connected=!1,this.disconnected=!0,this.subEvents()}var a,n,t=require("socket.io-parser"),c=require("component-emitter"),o=require("to-array"),i=require("./on"),s=require("component-bind"),r=require("debug")("socket.io-client:socket"),u=require("has-binary-data"),l=require("indexof");module.exports=exports=e,a={connect:1,connect_error:1,connect_timeout:1,disconnect:1,error:1,reconnect:1,reconnect_attempt:1,reconnect_failed:1,reconnect_error:1,reconnecting:1},n=c.prototype.emit,c(e.prototype),e.prototype.subEvents=function(){var e=this.io;this.subs=[i(e,"open",s(this,"onopen")),i(e,"packet",s(this,"onpacket")),i(e,"close",s(this,"onclose"))]},e.prototype.open=e.prototype.connect=function(){return this.connected?this:(this.io.open(),"open"==this.io.readyState&&this.onopen(),this)},e.prototype.send=function(){var e=o(arguments);return e.unshift("message"),this.emit.apply(this,e),this},e.prototype.emit=function(c){var e,i,s;return a.hasOwnProperty(c)?(n.apply(this,arguments),this):(e=o(arguments),i=t.EVENT,u(e)&&(i=t.BINARY_EVENT),s={type:i,data:e},"function"==typeof e[e.length-1]&&(r("emitting packet with ack id %d",this.ids),this.acks[this.ids]=e.pop(),s.id=this.ids++),this.connected?this.packet(s):this.sendBuffer.push(s),this)},e.prototype.packet=function(e){e.nsp=this.nsp,this.io.packet(e)},e.prototype.onopen=function(){r("transport is open - connecting"),"/"!=this.nsp&&this.packet({type:t.CONNECT})},e.prototype.onclose=function(e){r("close (%s)",e),this.connected=!1,this.disconnected=!0,this.emit("disconnect",e)},e.prototype.onpacket=function(e){if(e.nsp==this.nsp)switch(e.type){case t.CONNECT:this.onconnect();break;case t.EVENT:this.onevent(e);break;case t.BINARY_EVENT:this.onevent(e);break;case t.ACK:this.onack(e);break;case t.BINARY_ACK:this.onack(e);break;case t.DISCONNECT:this.ondisconnect();break;case t.ERROR:this.emit("error",e.data)}},e.prototype.onevent=function(t){var e=t.data||[];r("emitting event %j",e),null!=t.id&&(r("attaching ack callback to event"),e.push(this.ack(t.id))),this.connected?n.apply(this,e):this.receiveBuffer.push(e)},e.prototype.ack=function(n){var s=this,e=!1;return function(){var i,a;e||(e=!0,i=o(arguments),r("sending ack %j",i),a=u(i)?t.BINARY_ACK:t.ACK,s.packet({type:a,id:n,data:i}))}},e.prototype.onack=function(e){r("calling ack %s with %j",e.id,e.data);var t=this.acks[e.id];t.apply(this,e.data),delete this.acks[e.id]},e.prototype.onconnect=function(){this.connected=!0,this.disconnected=!1,this.emit("connect"),this.emitBuffered()},e.prototype.emitBuffered=function(){var e;for(e=0;e<this.receiveBuffer.length;e++)n.apply(this,this.receiveBuffer[e]);for(this.receiveBuffer=[],e=0;e<this.sendBuffer.length;e++)this.packet(this.sendBuffer[e]);this.sendBuffer=[]},e.prototype.ondisconnect=function(){r("server disconnect (%s)",this.nsp),this.destroy(),this.onclose("io server disconnect")},e.prototype.destroy=function(){for(var e=0;e<this.subs.length;e++)this.subs[e].destroy();this.io.destroy(this)},e.prototype.close=e.prototype.disconnect=function(){return this.connected?(r("performing disconnect (%s)",this.nsp),this.packet({type:t.DISCONNECT}),this.destroy(),this.onclose("io client disconnect"),this):this};
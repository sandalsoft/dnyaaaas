function e(t,e){this.nsp=t,this.server=t.server,this.adapter=this.nsp.adapter,this.id=e.id,this.request=e.request,this.client=e,this.conn=e.conn,this.rooms=[],this.acks={},this.connected=!0,this.disconnected=!1,this.handshake=this.buildHandshake()}var o,n,i=require("events").EventEmitter,r=require("socket.io-parser"),a=require("url"),t=require("debug")("socket.io:socket"),s=require("has-binary-data");module.exports=exports=e,exports.events=["error","connect","disconnect","newListener","removeListener"],o=["json","volatile","broadcast"],n=i.prototype.emit,e.prototype.__proto__=i.prototype,o.forEach(function(t){e.prototype.__defineGetter__(t,function(){return this.flags=this.flags||{},this.flags[t]=!0,this})}),e.prototype.__defineGetter__("request",function(){return this.conn.request}),e.prototype.buildHandshake=function(){return{headers:this.request.headers,time:new Date+"",address:this.request.connection.address(),xdomain:!!this.request.headers.origin,secure:!!this.request.connection.encrypted,issued:+new Date,url:this.request.url,query:a.parse(this.request.url,!0).query||{}}},e.prototype.emit=function(i){var e,o;if(~exports.events.indexOf(i))n.apply(this,arguments);else{if(e=Array.prototype.slice.call(arguments),o={},o.type=s(e)?r.BINARY_EVENT:r.EVENT,o.data=e,"function"==typeof e[e.length-1]){if(this._rooms||this.flags&&this.flags.broadcast)throw Error("Callbacks are not supported when broadcasting");t("emitting packet with ack id %d",this.nsp.ids),this.acks[this.nsp.ids]=e.pop(),o.id=this.nsp.ids++}this._rooms||this.flags&&this.flags.broadcast?this.adapter.broadcast(o,{except:[this.id],rooms:this._rooms,flags:this.flags}):this.packet(o),delete this._rooms,delete this.flags}return this},e.prototype.to=e.prototype.in=function(e){return this._rooms=this._rooms||[],~this._rooms.indexOf(e)||this._rooms.push(e),this},e.prototype.send=e.prototype.write=function(){var e=Array.prototype.slice.call(arguments);return e.unshift("message"),this.emit.apply(this,e),this},e.prototype.packet=function(e,t){e.nsp=this.nsp.name;var r=this.flags&&this.flags.volatile;this.client.packet(e,t,r)},e.prototype.join=function(e,r){t("joining room %s",e);var n=this;return~this.rooms.indexOf(e)?this:(this.adapter.add(this.id,e,function(o){return o?r&&r(o):(t("joined room %s",e),n.rooms.push(e),void(r&&r(null)))}),this)},e.prototype.leave=function(e,r){t("leave room %s",e);var n=this;return this.adapter.del(this.id,e,function(o){return o?r&&r(o):(t("left room %s",e),n.rooms.splice(n.rooms.indexOf(e,1)),void(r&&r(null)))}),this},e.prototype.leaveAll=function(){this.adapter.delAll(this.id)},e.prototype.onconnect=function(){t("socket connected - writing packet"),this.join(this.id),this.packet({type:r.CONNECT}),this.nsp.connected[this.id]=this},e.prototype.onpacket=function(e){switch(t("got packet %j",e),e.type){case r.EVENT:this.onevent(e);break;case r.BINARY_EVENT:this.onevent(e);break;case r.ACK:this.onack(e);break;case r.BINARY_ACK:this.onack(e);break;case r.DISCONNECT:this.ondisconnect();break;case r.ERROR:this.emit("error",e.data)}},e.prototype.onevent=function(e){var r=e.data||[];t("emitting event %j",r),null!=e.id&&(t("attaching ack callback to event"),r.push(this.ack(e.id))),n.apply(this,r)},e.prototype.ack=function(e){var n=this,o=!1;return function(){var i,a;o||(i=Array.prototype.slice.call(arguments),t("sending ack %j",i),a=s(i)?r.BINARY_ACK:r.ACK,n.packet({id:e,type:a,data:i}))}},e.prototype.onack=function(e){var r=this.acks[e.id];"function"==typeof r?(t("calling ack %s with %j",e.id,e.data),r.apply(this,e.data),delete this.acks[e.id]):t("bad ack %s",e.id)},e.prototype.ondisconnect=function(){t("got disconnect packet"),this.onclose("client namespace disconnect")},e.prototype.onclose=function(e){return this.connected?(t("closing socket - reason %s",e),this.leaveAll(),this.nsp.remove(this),this.client.remove(this),this.connected=!1,this.disconnected=!0,delete this.nsp.connected[this.id],void this.emit("disconnect",e)):this},e.prototype.error=function(e){this.packet({type:r.ERROR,data:e})},e.prototype.disconnect=function(e){return this.connected?(e?this.client.disconnect():(this.packet({type:r.DISCONNECT}),this.onclose("server namespace disconnect")),this):this};
function e(e,t){this.name=t,this.server=e,this.sockets=[],this.connected={},this.fns=[],this.ids=0,this.acks={},this.initAdapter()}var r,i=require("./socket"),n=require("events").EventEmitter,o=require("socket.io-parser"),t=require("debug")("socket.io:namespace"),s=require("has-binary-data");module.exports=exports=e,exports.events=["connect","connection","newListener"],exports.flags=["json"],r=n.prototype.emit,e.prototype.__proto__=n.prototype,exports.flags.forEach(function(t){e.prototype.__defineGetter__(t,function(){return this.flags=this.flags||{},this.flags[t]=!0,this})}),e.prototype.initAdapter=function(){this.adapter=new(this.server.adapter())(this)},e.prototype.use=function(e){return this.fns.push(e),this},e.prototype.run=function(n,e){function r(o){t[o](n,function(n){return n?e(n):t[o+1]?void r(o+1):e(null)})}var t=this.fns.slice(0);return t.length?void r(0):e(null)},e.prototype.to=e.prototype.in=function(e){return this.rooms=this.rooms||[],~this.rooms.indexOf(e)||this.rooms.push(e),this},e.prototype.add=function(n,o){var e,r;return t("adding socket to nsp %s",this.name),e=new i(this,n),r=this,this.run(e,function(i){process.nextTick(function(){if("open"==n.conn.readyState){if(i)return e.error(i.data||i.message);r.sockets.push(e),e.onconnect(),o&&o(),r.emit("connect",e),r.emit("connection",e)}else t("next called after client was closed - ignoring socket")})}),e},e.prototype.remove=function(e){var r=this.sockets.indexOf(e);~r?this.sockets.splice(r,1):t("ignoring remove for %s",e.id)},e.prototype.emit=function(i){var e,t,n;if(~exports.events.indexOf(i))r.apply(this,arguments);else{if(e=Array.prototype.slice.call(arguments),t=o.EVENT,s(e)&&(t=o.BINARY_EVENT),n={type:t,data:e},"function"==typeof e[e.length-1])throw Error("Callbacks are not supported when broadcasting");this.adapter.broadcast(n,{rooms:this.rooms,flags:this.flags}),delete this.rooms,delete this.flags}return this},e.prototype.send=e.prototype.write=function(){var e=Array.prototype.slice.call(arguments);return e.unshift("message"),this.emit.apply(this,e),this};
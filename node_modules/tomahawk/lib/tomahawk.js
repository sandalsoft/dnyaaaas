module.exports=function(){function r(_){function C(t,e){function n(o,n){var t,i=e.command,s=e.args||[];r.logger.log("debug","spawn: %s [args:%j]",i,s,r.meta),t=p(i,s),e.encoding&&t.stdin.setEncoding(e.encoding),t.stderr.on("data",function(e){r.logger.log("debug","stderr: %s",""+e,r.meta),n.write(e)}),t.stdout.on("data",function(e){r.logger.log("debug","stdout: %s",""+e,r.meta),n.write(e)}),t.on("close",function(){r.logger.log("debug","close",r.meta),n.end()}),o.on("data",function(e){r.logger.log("read %s",""+e,r.meta),t.stdin.write(e)}),o.on("end",function(e){r.logger.log("end %s",""+e,r.meta),e?t.stdin.end(e):t.stdin.end()})}var o=e.method||"GET";"GET"===o?t.get(e.route,n):"POST"===o?t.post(e.route,n):"PUT"===o?t.put(e.route,n):"DELETE"===o&&t.delete(e.route,n)}var E,O,x,i,k,d,m,w,q,S,g,v,b,r=this,y=[];for(this.config=t.mergeEnvironment(t.merge(_?_:{},f)),this.meta=this.config.meta?this.config.meta:this.config.name+"-Engine",this.config.logger?this.logger=this.config.logger:(E=require("winston"),O={module:r.config.name||r.meta,pid:process.pid},r.logger=new E.Logger({transports:[new E.transports.Console({level:r.config.level||"info",json:!1,colorize:!0})]})),this.config.www||(this.config.www=process.cwd()),"/"!==this.config.www.charAt(0)&&(this.config.www=e.join(process.cwd(),this.config.www)),this.headers=a(this.config.headers,this.logger,this.meta),this.app=n(),this.server=u.Server(this.app),this.io=l(this.server),r.app.use(s("combined",{stream:{write:function(e){r.logger&&r.logger.log&&r.logger.log("info",e.replace(/\n/,""),r.meta)}}})),r.app.use(h.urlencoded({extended:!0})),x=r.config.bodyparser instanceof Array?r.config.bodyparser:"string"==typeof r.config.bodyparser?[r.config.bodyparser]:["./bodyparser"],i=0;i<x.length;++i)r.logger.log("info","requestBodyParser %s",x[i],r.meta),require(x[i])(r.app,r.config);r.app.use(function(o,t,n){for(var e=0;e<r.headers.length;++e)t.setHeader(r.headers[e].name,r.headers[e].value);return n()}),r.config.context&&r.app.use(r.config.context,n.static(r.config.www)),"error"===r.level?r.app.use(o()):r.app.use(o()),process.on("exit",function(){y.forEach(function(e){e()}),r.logger.log("error","EXIT",r.meta)}),process.on("SIGINT",function(){y.forEach(function(e){e()}),r.logger.log("warn","SIGINT",r.meta),process.exit(0)}),k=e.join(r.config.rootPath,".."),r.logger.log("debug","plugin-path: %s",k,r.meta);for(d in r.config.plugins)r.config.plugins.hasOwnProperty(d)&&(m=r.config.plugins[d],w="/"===m.implementation.charAt(0)?m.implementation.charAt(0):e.join(k,m.implementation),r.logger.log("debug","plugin[%s]:%j",d,e.join(w,"package.json"),r.meta),q=JSON.parse(c.readFileSync(e.join(w,"package.json"))),S=require(e.join(w,q.main)),_[d]=r.config[d]=S(r.app,r.config,r.io,r),r.config[d]&&r.config[d].shutdown&&y.push(r.config[d].shutdown),r.config[d]&&r.config[d].constructor&&r.config[d].constructor());for(g=r.config.routes instanceof Array?r.config.routes:"string"==typeof r.config.routes?[r.config.routes]:[],i=0;i<g.length;++i)r.logger.log("debug","loading module: %s",g[i],r.meta),v=require("/"===g[i].charAt(0)?g[i]:e.join(r.config.rootPath,"lib",g[i]))(r.app,r.config,r.io,r),v&&v.shutdown&&y.push(v.shutdown);for(b=r.config.cgi instanceof Array?r.config.cgi:"string"==typeof r.config.cgi?[r.config.cgi]:[],r.logger.log("debug","cgis: %j",b,r.meta),i=0;i<b.length;++i)C(r.app,b[i])}function a(e,o,i){var r,n,t,a=/\s*([^\s:]*)\s*:\s*([^\s\n\r]*)/,s=[];for(e=e instanceof Array?e:[e?e:""],r=0;r<e.length;++r)n=e[r],t=a.exec(n),t&&3===t.length?(s.push({name:t[1],value:t[2]}),o.log("debug","http-header|%s : %s",t[1],t[2],i)):o.log("warn","http-header|IGNORING-INVALID-HEADER|%s|expecting=type : value",n,i);return s}function i(e){return new r(e)}var c=require("fs"),e=require("path"),n=require("express"),s=(require("connect"),require("morgan")),h=require("body-parser"),o=require("errorhandler"),u=require("http"),l=require("socket.io"),p=require("child_process").spawn,t=require("node-options"),f=t.readPackageConfig(e.join(__dirname,"..","package.json"));return r.prototype.start=function(){return this.server.listen(this.config.port,this.config.ip),this.logger.log("info","listen|root=%s|context=%s|IP=%s|PORT=%d",this.config.www,this.config.context,this.config.ip,this.config.port,this.meta),this.app},{create:i}}();